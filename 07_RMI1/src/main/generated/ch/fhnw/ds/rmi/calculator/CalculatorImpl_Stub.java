// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package ch.fhnw.ds.rmi.calculator;

@SuppressWarnings("deprecation")
public final class CalculatorImpl_Stub extends java.rmi.server.RemoteStub implements ch.fhnw.ds.rmi.calculator.Calculator, java.rmi.Remote {
	private static final long serialVersionUID = -4466303933621774L;

	private static final java.rmi.server.Operation[] operations = {
			new java.rmi.server.Operation("long add(long, long)"),
			new java.rmi.server.Operation("long div(long, long)"),
			new java.rmi.server.Operation("long mul(long, long)"),
			new java.rmi.server.Operation("long sub(long, long)") 
	};

	private static final long interfaceHash = 2829799981544659448L;

	// constructors
	public CalculatorImpl_Stub() {
		super();
	}

	public CalculatorImpl_Stub(java.rmi.server.RemoteRef ref) {
		super(ref);
	}

	// methods from remote interfaces

	// implementation of add(long, long)
	public long add(long $param_long_1, long $param_long_2) throws java.rmi.RemoteException {
		try {
			java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 0, interfaceHash);
			try {
				java.io.ObjectOutput out = call.getOutputStream();
				out.writeLong($param_long_1);
				out.writeLong($param_long_2);
			} catch (java.io.IOException e) {
				throw new java.rmi.MarshalException("error marshalling arguments", e);
			}
			ref.invoke(call);
			long $result;
			try {
				java.io.ObjectInput in = call.getInputStream();
				$result = in.readLong();
			} catch (java.io.IOException e) {
				throw new java.rmi.UnmarshalException("error unmarshalling return", e);
			} finally {
				ref.done(call);
			}
			return $result;
		} catch (java.lang.RuntimeException e) {
			throw e;
		} catch (java.rmi.RemoteException e) {
			throw e;
		} catch (java.lang.Exception e) {
			throw new java.rmi.UnexpectedException("undeclared checked exception", e);
		}
	}

	// implementation of div(long, long)
	public long div(long $param_long_1, long $param_long_2) throws java.rmi.RemoteException {
		try {
			java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 1, interfaceHash);
			try {
				java.io.ObjectOutput out = call.getOutputStream();
				out.writeLong($param_long_1);
				out.writeLong($param_long_2);
			} catch (java.io.IOException e) {
				throw new java.rmi.MarshalException("error marshalling arguments", e);
			}
			ref.invoke(call);
			long $result;
			try {
				java.io.ObjectInput in = call.getInputStream();
				$result = in.readLong();
			} catch (java.io.IOException e) {
				throw new java.rmi.UnmarshalException("error unmarshalling return", e);
			} finally {
				ref.done(call);
			}
			return $result;
		} catch (java.lang.RuntimeException e) {
			throw e;
		} catch (java.rmi.RemoteException e) {
			throw e;
		} catch (java.lang.Exception e) {
			throw new java.rmi.UnexpectedException("undeclared checked exception", e);
		}
	}

	// implementation of mul(long, long)
	public long mul(long $param_long_1, long $param_long_2) throws java.rmi.RemoteException {
		try {
			java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 2, interfaceHash);
			try {
				java.io.ObjectOutput out = call.getOutputStream();
				out.writeLong($param_long_1);
				out.writeLong($param_long_2);
			} catch (java.io.IOException e) {
				throw new java.rmi.MarshalException("error marshalling arguments", e);
			}
			ref.invoke(call);
			long $result;
			try {
				java.io.ObjectInput in = call.getInputStream();
				$result = in.readLong();
			} catch (java.io.IOException e) {
				throw new java.rmi.UnmarshalException("error unmarshalling return", e);
			} finally {
				ref.done(call);
			}
			return $result;
		} catch (java.lang.RuntimeException e) {
			throw e;
		} catch (java.rmi.RemoteException e) {
			throw e;
		} catch (java.lang.Exception e) {
			throw new java.rmi.UnexpectedException("undeclared checked exception", e);
		}
	}

	// implementation of sub(long, long)
	public long sub(long $param_long_1, long $param_long_2) throws java.rmi.RemoteException {
		try {
			java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 3, interfaceHash);
			try {
				java.io.ObjectOutput out = call.getOutputStream();
				out.writeLong($param_long_1);
				out.writeLong($param_long_2);
			} catch (java.io.IOException e) {
				throw new java.rmi.MarshalException("error marshalling arguments", e);
			}
			ref.invoke(call);
			long $result;
			try {
				java.io.ObjectInput in = call.getInputStream();
				$result = in.readLong();
			} catch (java.io.IOException e) {
				throw new java.rmi.UnmarshalException("error unmarshalling return", e);
			} finally {
				ref.done(call);
			}
			return $result;
		} catch (java.lang.RuntimeException e) {
			throw e;
		} catch (java.rmi.RemoteException e) {
			throw e;
		} catch (java.lang.Exception e) {
			throw new java.rmi.UnexpectedException("undeclared checked exception", e);
		}
	}
}
