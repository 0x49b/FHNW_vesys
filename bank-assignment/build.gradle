apply plugin: 'java'

repositories {
    jcenter()
}

sourceCompatibility = 11
targetCompatibility = 11
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

def currentOS = org.gradle.internal.os.OperatingSystem.current()
def platform
if (currentOS.isWindows()) {
    platform = 'win'
} else if (currentOS.isLinux()) {
    platform = 'linux'
} else if (currentOS.isMacOsX()) {
    platform = 'mac'
}

dependencies {
    compile "org.openjfx:javafx-base:11:${platform}"
    compile "org.openjfx:javafx-graphics:11:${platform}"
    compile "org.openjfx:javafx-controls:11:${platform}"
    compile "org.openjfx:javafx-swing:11:${platform}"
}

dependencies {
    compile 'junit:junit:4.12'
}


apply plugin: 'idea'

idea.module.outputDir file("out/production/classes")


apply plugin: 'eclipse'

eclipse.classpath.file {
    whenMerged {
        entries.findAll { it.kind == 'lib' }.each { it.entryAttributes['module'] = 'true' }
    }
}

compileJava {
      options.compilerArgs = [
             '--module-path', classpath.asPath
      ]
}

task runBank(type:JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'bank.gui.ClientFX'
    jvmArgs = [
        '--module-path', classpath.asPath,
        '--add-modules', 'javafx.controls'
    ]
}

